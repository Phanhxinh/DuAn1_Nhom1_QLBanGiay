/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package views;

import com.barcodelib.barcode.Linear;
import com.github.sarxos.webcam.WebcamPanel;
import com.github.sarxos.webcam.Webcam;
import com.github.sarxos.webcam.WebcamResolution;
import com.google.zxing.BinaryBitmap;
import java.awt.Dimension;
import java.awt.image.BufferedImage;
import java.util.concurrent.ThreadFactory;
import java.util.logging.Level;
import java.util.logging.Logger;
import com.google.zxing.LuminanceSource;
import com.google.zxing.MultiFormatReader;
import com.google.zxing.Reader;
import com.google.zxing.Result;
import com.google.zxing.client.j2se.BufferedImageLuminanceSource;
import com.google.zxing.common.HybridBinarizer;
import java.util.concurrent.Executor;
import java.util.concurrent.Executors;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Admin
 */
public class Camera extends javax.swing.JFrame implements Runnable, ThreadFactory {

    private WebcamPanel pannel = null;
    private Webcam wedcam = null;
    private Executor executor = Executors.newSingleThreadExecutor(this);

    /**
     * Creates new form Camera
     */
    public Camera() {
        initComponents();
        initWebcam();
        this.setLocationRelativeTo(null);
    }

    private void initWebcam() {
        Dimension size = WebcamResolution.QVGA.getSize();
        wedcam = Webcam.getWebcams().get(0);
        wedcam.setViewSize(size);
        pannel = new WebcamPanel(wedcam);
        pannel.setPreferredSize(size);
        pannel.setFPSDisplayed(true);

        cam.add(pannel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 400, 250));
        executor.execute(this);
    }

    @Override
    public void run() {
        do {
            try {
                Thread.sleep(100);
            } catch (InterruptedException ex) {
                Logger.getLogger(Camera.class.getName()).log(Level.SEVERE, null, ex);
            }
            Reader reader = null;
            Result result = null;
            BufferedImage image = null;

            if (wedcam.isOpen()) {
                if ((image = wedcam.getImage()) == null) {
                    continue;
                }
            }
            LuminanceSource source = new BufferedImageLuminanceSource(image);
            BinaryBitmap bitmap = new BinaryBitmap(new HybridBinarizer(source));
            try {
                reader = new MultiFormatReader();
                result = reader.decode(bitmap);
            } catch (Exception e) {
                e.printStackTrace();
            }
            if (result != null) {
                BanHang b = new BanHang();
                String ketqua = result.getText();
                txtrusult.setText(ketqua);
//                String soluong = JOptionPane.showInputDialog(this, "Mời bạn nhập số lượng sản phẩm");
//                int khosoluong = Integer.parseInt(soluong);
//                int Line = b.tableGioHang.getRowCount();
//                int row = b.tableSanPham.getSelectedRow();
//                String tenSP = b.tableSanPham.getValueAt(row, 1).toString();
//                for (int i = 0; i < Line; i++) {
//                    if (b.tableGioHang.getValueAt(i, 1).equals(tenSP)) {
//                        int quanCu = (int) b.tableGioHang.getValueAt(i, 3);
//                        int quanMoi = khosoluong;
//                        int quanCuVaMoi = quanCu + quanMoi;
//                        khosoluong = quanCuVaMoi;
////                soLuong.setValue(quanCuVaMoi);
//                        bang.removeRow(i);
//                        break;
//                    }
//                }
//                int soluongcuoi = khosoluong;
//                b.bang = (DefaultTableModel) b.tableGioHang.getModel();
//                b.banHangITF.getAllGioHang(null, ketqua).forEach(gh -> {
//                    b.bang.addRow(new Object[]{b.tableGioHang.getRowCount() + 1, gh.getTenSP(), gh.getLoaiSP(), soluongcuoi, gh.getDonGia(), Integer.parseInt(gh.getDonGia()) * soluongcuoi});
//                });
            }
        } while (true);
    }

    @Override
    public Thread newThread(Runnable r) {
        Thread t = new Thread(r, "My Thread");
        t.setDaemon(true);
        return t;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        WedcamPannel = new javax.swing.JPanel();
        cam = new javax.swing.JPanel();
        txtrusult = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        WedcamPannel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        cam.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        WedcamPannel.add(cam, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, 420, 260));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(WedcamPannel, javax.swing.GroupLayout.DEFAULT_SIZE, 448, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(52, 52, 52)
                .addComponent(txtrusult, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(WedcamPannel, javax.swing.GroupLayout.PREFERRED_SIZE, 285, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(txtrusult, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(21, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(Camera.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(Camera.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(Camera.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(Camera.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new Camera().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel WedcamPannel;
    private javax.swing.JPanel cam;
    public javax.swing.JTextField txtrusult;
    // End of variables declaration//GEN-END:variables

}
